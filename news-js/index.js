(()=>{"use strict";var __webpack_modules__={208:()=>{eval("\n;// CONCATENATED MODULE: ./src/components/controller/loader.ts\nclass Loader {\r\n    constructor(baseLink, options) {\r\n        this.baseLink = baseLink;\r\n        this._options = options;\r\n    }\r\n    getResp({ endpoint, options = {} }, callback) {\r\n        this.load('GET', endpoint, callback, options);\r\n    }\r\n    errorHandler(res) {\r\n        if (!res.ok) {\r\n            if (res.status === Status.fourHundredOne || res.status === Status.fourHundredFour)\r\n                console.log(`Sorry, but there is ${res.status} error: ${res.statusText}`);\r\n            throw Error(res.statusText);\r\n        }\r\n        return res;\r\n    }\r\n    makeUrl(options, endpoint) {\r\n        const urlOptions = Object.assign(Object.assign({}, this._options), options);\r\n        let url = `${this.baseLink}${endpoint}?`;\r\n        Object.keys(urlOptions).forEach((key) => {\r\n            url += `${key}=${urlOptions[key]}&`;\r\n        });\r\n        return url.slice(0, -1);\r\n    }\r\n    load(method, endpoint, callback, options = {}) {\r\n        fetch(this.makeUrl(options, endpoint), { method })\r\n            .then(this.errorHandler)\r\n            .then((res) => res.json())\r\n            .then((data) => callback(data))\r\n            .catch((err) => console.error(err));\r\n    }\r\n}\r\n/* harmony default export */ const loader = (Loader);\r\n\n;// CONCATENATED MODULE: ./src/components/controller/appLoader.ts\n\r\nclass AppLoader extends loader {\r\n    // for dev mode of webpack settings use this url https://newsapi.org/v2/\r\n    constructor() {\r\n        super('https://nodenews.up.railway.app/', {\r\n            apiKey: '55cb6be843b74ce18532008211767630', // получите свой ключ https://newsapi.org/ \r\n        });\r\n    }\r\n}\r\n/* harmony default export */ const appLoader = (AppLoader);\r\n\n;// CONCATENATED MODULE: ./src/components/controller/controller.ts\n\r\nclass AppController extends appLoader {\r\n    getSources(callback) {\r\n        super.getResp({\r\n            endpoint: 'sources',\r\n        }, callback);\r\n    }\r\n    getNews(e, callback) {\r\n        let target = e.target;\r\n        const newsContainer = e.currentTarget;\r\n        while (target !== newsContainer) {\r\n            if (target === null || target === void 0 ? void 0 : target.classList.contains('source__item')) {\r\n                const sourceId = target.getAttribute('data-source-id');\r\n                if ((newsContainer === null || newsContainer === void 0 ? void 0 : newsContainer.getAttribute('data-source')) !== sourceId) {\r\n                    if (sourceId != null)\r\n                        newsContainer.setAttribute('data-source', sourceId);\r\n                    super.getResp({\r\n                        endpoint: 'everything',\r\n                        options: {\r\n                            sources: sourceId,\r\n                        },\r\n                    }, callback);\r\n                }\r\n                return;\r\n            }\r\n            target = target.parentNode;\r\n        }\r\n    }\r\n}\r\n/* harmony default export */ const controller = (AppController);\r\n\n;// CONCATENATED MODULE: ./src/components/view/news/news.ts\n\r\nclass News {\r\n    draw(data) {\r\n        const news = data.length >= 10 ? data.filter((_item, idx) => idx < 10) : data;\r\n        const fragment = document.createDocumentFragment();\r\n        const newsItemTemp = document.querySelector('#newsItemTemp');\r\n        if (newsItemTemp) {\r\n            news.forEach((item, idx) => {\r\n                var _a;\r\n                const newsClone = newsItemTemp.content.cloneNode(true);\r\n                if (idx % 2)\r\n                    (_a = newsClone.querySelector('.news__item')) === null || _a === void 0 ? void 0 : _a.classList.add('alt');\r\n                const newsMetaPhoto = newsClone.querySelector('.news__meta-photo');\r\n                if (newsMetaPhoto)\r\n                    newsMetaPhoto.style.backgroundImage = `url(${item.urlToImage || 'https://res.cloudinary.com/graham-media-group/image/fetch/f_auto/q_auto/c_scale,w_900/https://arc-anglerfish-arc2-prod-gmg.s3.amazonaws.com/public/VCH4PNVUTRGXZJIPJXUX2EIF74.png?_a=AJE+xWI0'})`;\r\n                const newsMetaAuthor = newsClone.querySelector('.news__meta-author');\r\n                if (newsMetaAuthor)\r\n                    newsMetaAuthor.textContent = item.author || item.source.name;\r\n                const newsMetaDate = newsClone.querySelector('.news__meta-date');\r\n                if (newsMetaDate)\r\n                    newsMetaDate.textContent = item.publishedAt.slice(0, 10).split('-').reverse().join('-');\r\n                const newsDesTitle = newsClone.querySelector('.news__description-title');\r\n                if (newsDesTitle)\r\n                    newsDesTitle.textContent = item.title;\r\n                const newsDescSource = newsClone.querySelector('.news__description-source');\r\n                if (newsDescSource)\r\n                    newsDescSource.textContent = item.source.name;\r\n                const newsDescContents = newsClone.querySelector('.news__description-content');\r\n                if (newsDescContents)\r\n                    newsDescContents.textContent = item.description;\r\n                const newsReadMore = newsClone.querySelector('.news__read-more a');\r\n                if (newsReadMore)\r\n                    newsReadMore.setAttribute('href', item.url);\r\n                fragment.append(newsClone);\r\n            });\r\n            const isNews = document.querySelector('.news');\r\n            if (isNews)\r\n                isNews.innerHTML = '';\r\n            isNews === null || isNews === void 0 ? void 0 : isNews.appendChild(fragment);\r\n        }\r\n    }\r\n}\r\n/* harmony default export */ const news = (News);\r\n\n;// CONCATENATED MODULE: ./src/components/view/sources/sources.ts\n\r\nclass Sources {\r\n    draw(data) {\r\n        var _a;\r\n        const fragment = document.createDocumentFragment();\r\n        const sourceItemTemp = document.querySelector('#sourceItemTemp');\r\n        if (sourceItemTemp) {\r\n            data.forEach((item) => {\r\n                var _a;\r\n                const sourceClone = sourceItemTemp === null || sourceItemTemp === void 0 ? void 0 : sourceItemTemp.content.cloneNode(true);\r\n                const element = sourceClone.querySelector('.source__item-name');\r\n                if (element)\r\n                    element.textContent = item.name;\r\n                (_a = sourceClone.querySelector('.source__item')) === null || _a === void 0 ? void 0 : _a.setAttribute('data-source-id', item.id);\r\n                fragment.append(sourceClone);\r\n            });\r\n            (_a = document.querySelector('.sources')) === null || _a === void 0 ? void 0 : _a.append(fragment);\r\n        }\r\n    }\r\n}\r\n/* harmony default export */ const sources = (Sources);\r\n\n;// CONCATENATED MODULE: ./src/components/view/appView.ts\n\r\n\r\nclass AppView {\r\n    constructor() {\r\n        this.news = new news();\r\n        this.sources = new sources();\r\n    }\r\n    drawNews(data) {\r\n        const values = (data === null || data === void 0 ? void 0 : data.articles) ? data === null || data === void 0 ? void 0 : data.articles : [];\r\n        this.news.draw(values);\r\n    }\r\n    drawSources(data) {\r\n        const values = (data === null || data === void 0 ? void 0 : data.sources) ? data === null || data === void 0 ? void 0 : data.sources : [];\r\n        this.sources.draw(values);\r\n    }\r\n}\r\n/* harmony default export */ const appView = ((/* unused pure expression or super */ null && (AppView)));\r\n\n;// CONCATENATED MODULE: ./src/components/app/app.ts\n\r\n\r\nclass App {\r\n    constructor() {\r\n        this.controller = new controller();\r\n        this.view = new AppView();\r\n    }\r\n    start() {\r\n        const doc = document.querySelector('.sources');\r\n        if (doc) {\r\n            doc.addEventListener('click', (e) => this.controller.getNews(e, (data) => this.view.drawNews(data)));\r\n            this.controller.getSources((data) => this.view.drawSources(data));\r\n        }\r\n    }\r\n}\r\n/* harmony default export */ const app = (App);\r\n\n;// CONCATENATED MODULE: ./src/index.ts\n\r\n\r\nconst src_app = new app();\r\nsrc_app.start();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///208\n")}},__webpack_exports__={};__webpack_modules__[208]()})();